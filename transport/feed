#!/usr/bin/env node

var every = require('every')

module.exports = class {

    constructor(provider) {

        this.actions = [];
        this.provider = provider;

    }

    on (action='default', callback=null) {
        return this.actions.push({
            action: action,
            function: callback
        });
    }

    call (action='default', data) {
        for (const callback of this.actions) {
            if (action === callback.action) {
                try {
                    callback.function(data)
                } catch (e) {
                    console.error(e)
                }
            }
        }
    }

    init () {

        const this_ = this;

        if ('get' in this.provider) {
            // this.provider.feed.get()
        }

        every(12000).on('data', function(dt) {
            if (dt === 12000) {
                this_.provider.get().then(function (e) {
                    this_.call('getContent', e.items)
                })
            }
        })

        this.call('init', true)

    }


}