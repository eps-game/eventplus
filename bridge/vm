#!/usr/bin/env node

var prototype = require('../models/essence');

module.exports = class extends prototype{

    constructor() {

        super();

        this.meta = {
            id: 'vmbbe-101',
            name: "Virtual Machine Bridge by Event+",
            version: 1
        };

    }

    init () {

        if ('private' in this.essence) {

            if ('environment' in this.essence['private']) {

                var context = this.essence['public'];
                var environment = this.essence['private']['environment'];
                var bin = this.essence['private']['fs'].readFileSync('./virtual/bin', 'utf8');
                var execute = this.essence['private']['fs'].readFileSync('./virtual/execute', 'utf8');

                new Promise((resolve, reject) => {

                    environment.createContext(context);
                    environment.runInContext(bin, context);

                }).catch((event) => {
                    this.call('error', event)
                });

                this.on ('*',  (event, action) => {
                    if (!(action in ['init', 'error'])) {
                        new Promise((resolve, reject) => {

                            environment.runInContext(execute.replaceObject({
                                name: action,
                                data: JSON.stringify(event)
                            }), context);

                        }).catch((event) => {
                            this.call('error', event)
                        });

                    }
                });

                this.call('init', true);
                this.call('boot', true);
            }

        } else {
            throw ``;
        }

    }

}